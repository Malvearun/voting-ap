variables:
  containerRegistry: 'dockerhub'
  imageRepository: 'azure-vote-app'
  tag: 'v2'
  kubernetesServiceConnection: 'az-k8s'  # Kubernetes service connection
  dockerServiceConnection: 'dockerhub'   # Docker Hub service connection

jobs:
  - job: Build
    displayName: Build and Push Docker Image
    steps:
      # Step 1: Build the Docker image
      - task: Docker@2
        displayName: Docker Build
        inputs:
          command: build
          dockerFile: $(Build.SourcesDirectory)/azure-vote/Dockerfile
          tags: $(tag)  # Don't rely on full tag here
          buildContext: $(Build.SourcesDirectory)

      # Step 2: Debugging step to list all Docker images
      - script: |
          echo "Listing all Docker images:"
          docker images
        displayName: 'List Docker Images for Debugging'

      # Step 3: Tag any untagged image with the correct name and tag
      - script: |
          echo "Checking for untagged images..."
          # Find the image ID of the untagged image
          IMAGE_ID=$(docker images -q --filter "dangling=true")
          if [ -n "$IMAGE_ID" ]; then
            echo "Found untagged image, tagging it now."
            # Tag the untagged image with the correct name and tag
            docker tag $IMAGE_ID gudshuis/$(imageRepository):$(tag)
          else
            echo "No untagged image found."
          fi
        displayName: 'Tag Untagged Image if Exists'

      # Step 4: Push the Docker image to Docker Hub
      - task: Docker@2
        displayName: Docker Push
        inputs:
          command: push
          repository: gudshuis/$(imageRepository)
          tags: $(tag)
          containerRegistry: $(dockerServiceConnection)  # Docker Hub service connection
